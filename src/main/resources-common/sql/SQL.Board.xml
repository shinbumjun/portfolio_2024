<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.lhs.dao.BoardDao">

	<!-- 
		1. 모든 리스트  
		public BoardDto list(BoardDto boardDto); 
		
		(브라우저에 출력될 데이터) 번호, 제목, 글쓴이, 조회수, 첨부파일, 작성일 (조건 type_seq=2)
		
		LIMIT #{offset}, #{pageSize} // 시작 점, 페이지 사이즈 
	-->
	<select id="list" parameterType="map" resultType="BoardDto">
	    SELECT board_seq, title, member_id, hits, has_file, create_dtm
		FROM S_shinbumjun.board
		WHERE type_seq = #{typeSeq}
		ORDER BY board_seq desc
    	LIMIT #{offset}, #{pageSize};
	</select>
	
	<!--  
		2. 총 게시물 수를 구하기 (자유게시판의 총 게시글만 얻어오기)
		public int getCount(String typeSeq);
	-->
	<select id="getCount" parameterType="String" resultType="int">
		select count(*)
		from S_shinbumjun.board
		where type_seq = #{typeSeq};
	</select>
	
	<!-- 
		3. 자유 게시판 업로드
		public int write(BoardDto boardDto);
		{memberNick=, is_ajax=true, memberIdx=, action=contact_send, title=신범준 제목, content=신범준 내용, memberId=sinbumjun, typeSeq=2, boardSeq=9}
		useGeneratedKeys="true" keyProperty="boardSeq"  : 글 번호
	-->
	<insert id ="write" parameterType="boardDto" useGeneratedKeys="true" keyProperty="boardSeq" >
		INSERT INTO S_shinbumjun.board
	    	(type_seq, member_id, member_nick, title, content, has_file, hits, create_dtm, update_dtm)
	    VALUES
	    	(#{typeSeq}, #{memberId}, #{memberNick}, #{title}, #{content}, NULL, 0, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'), DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'))
	</insert>
	
	<!-- 
		자유게시판 글 조회
		public BoardDto read(BoardDto boardDto);
		boardSeq        board_seq
		typeSeq         type_seq
	
	 -->
	<select id="read" parameterType="BoardDto" resultType = "BoardDto">
		SELECT board_seq, type_seq, member_id, member_nick, title, content, has_file, hits, create_dtm, update_dtm
		FROM S_shinbumjun.board
		where board_seq = #{boardSeq}
		and type_seq = #{typeSeq};
	</select>

	<!-- 
		***has_file : 파일이 있냐 없냐에 따라서 Y/N -> BoardSeq, TypeSeq값을 가지고 hasFile 수정
		public int updateHasFile(HashMap<String, Object> update);
	-->
	<update id="updateHasFile" parameterType="HashMap">
	 	 UPDATE S_shinbumjun.board
		 SET has_file= #{hasFile}
		 WHERE board_seq= #{BoardSeq} AND type_seq=#{TypeSeq};
	 </update>

	<!-- 
		  첨부파일 먼저 삭제
		 public void deleteAttachedFiles(BoardDto boardDto);
	-->
	<delete id="deleteAttachedFiles" parameterType="boardDto">
	    DELETE FROM S_shinbumjun.board_attach
	    WHERE board_seq=#{boardSeq} AND type_seq=#{typeSeq};
	</delete>
	
	<!--  
	  	  게시글 삭제
		 public int delete(BoardDto boardDto);
		 boardSeq, typeSeq
	-->
	<delete id="delete" parameterType="boardDto">
		DELETE FROM S_shinbumjun.board
	   	WHERE board_seq=#{boardSeq} AND type_seq=#{typeSeq};
	</delete>
	
	<!-- 
	         혹시라도 첨부파일이 있을 수 있기 때문에 확인
	    public boolean hasAttachedFiles(Integer boardSeq);
	-->
	<select id="hasAttachedFiles" parameterType="int" resultType="boolean">
	    SELECT COUNT(*) > 0
	    FROM S_shinbumjun.board_attach
	    WHERE board_seq = #{boardSeq};
	</select>

	<!--  
		    게시판 삭제시  HasFile 값이 무엇인지 가져오기
		  public String getHasFile(BoardDto boardDto);
	-->
	<select id="getHasFile" parameterType="boardDto" resultType="String">
		SELECT has_file
		FROM S_shinbumjun.board
		where board_seq = #{boardSeq}
		and type_seq = #{typeSeq};
	</select>

	<!-- 
		 fakename 만든것 업로드
		 public int addAttFile(HashMap<String, Object> map); 
		 
		 map.put("Type", mFile.getContentType());
		 map.put("Filename", mFile.getOriginalFilename());
		 map.put("Name", mFile.getName());
		 map.put("Size", mFile.getSize());
	-->
	<insert id="addAttFile" parameterType="HashMap">
	    INSERT INTO S_shinbumjun.board_attach
	    (type_seq, board_seq, file_name, fake_filename, file_size, file_type, save_loc, create_dtm)
	    VALUES
	    (#{typeSeq}, #{boardSeq}, #{Filename}, #{fakename}, #{Size}, #{Type}, '', DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'))
	</insert>

	
	<!--  
		게시글 수정
		public int update(BoardDto boardDto);
		
		boardSeq        board_seq
	 	typeSeq         type_seq
	 	
		title           title
	 	content         content
	 	***파일 추후 예정
	-->
	<update id="update" parameterType="boardDto">
		UPDATE S_shinbumjun.board
		SET title=#{title}, content=#{content}, has_file=#{hasFile}, update_dtm=DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		WHERE board_seq=#{boardSeq} AND type_seq=#{typeSeq};
	</update>
	
	
	<!-- 
		 해당 게시물 조회수 +1
		 public int updateHits(HashMap<String, Object> map);
		 boardSeq
		 typeSeq
		                     hits + 1
	 -->
	<update id="updateHits" parameterType="HashMap">
		UPDATE S_shinbumjun.board
		SET hits=hits+1
		WHERE board_seq=#{boardSeq} AND type_seq=#{typeSeq};
	</update>

	<!-- 중복 sql -->
	<sql id="searchCondition">
		<choose>
				<when test='option != null and option=="T"'>
					and hits > #{keyword}
				</when>
				<when test='option != null and option=="W"'>
					and has_file = #{keyword}
				</when>
				<otherwise>
					and (title like concat('%', #{keyword}, '%')
					or member_id like concat('%', #{keyword}, '%'))
				</otherwise>
			</choose>
	</sql>
	
	<!-- 
		검색기능 
		typeSeq = 2
		keyword, offset, pageSize 값을 받아야 한다
		
		제목+글쓴이 -> A
		조회수 이상 -> T
		첨부파일 유무 -> W
	-->
	<select id="searchSelectPage" parameterType="SearchCondition" resultType="BoardDto">
		SELECT board_seq, title, member_id, hits, has_file, create_dtm
		FROM S_shinbumjun.board
		where true
		<include refid="searchCondition"/>
		and type_seq = 2
		ORDER BY board_seq desc
    	LIMIT #{offset}, #{pageSize};
	</select>

	<!-- 
		검색 결과가 몇 개 인지 알아야 페이징을 할 수 있다
		typeSeq, keyword, offset, pageSize
	 -->
	<select id="searchResyltCnt" parameterType="SearchCondition" resultType="int">
		SELECT count(*)
		FROM S_shinbumjun.board
		where true
		<include refid="searchCondition"/>
		and type_seq = 2
	</select>

</mapper>




